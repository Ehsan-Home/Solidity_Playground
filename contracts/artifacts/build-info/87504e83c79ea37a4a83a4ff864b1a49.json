{
	"id": "87504e83c79ea37a4a83a4ff864b1a49",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mycontract.sol": {
				"content": "pragma solidity ^0.8.13;\n\ncontract MyContract {\n    enum State {Waiting , InProgress, Ready}\n    State public state;\n\n    constructor() {\n        state = State.Waiting;\n    }\n\n    function updateState() public {\n        state = State.InProgress;\n    }\n\n    function setReady() public {\n        state = State.Ready;\n    }\n\n    function isReady() public view returns(bool) {\n        if (state == State.Ready) {\n            return true;\n        }\n        return false;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mycontract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "isReady",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setReady",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum MyContract.State",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mycontract.sol\":26:474  contract MyContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Mycontract.sol\":122:174  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Mycontract.sol\":154:167  State.Waiting */\n  0x00\n    /* \"contracts/Mycontract.sol\":146:151  state */\n  dup1\n  0x00\n    /* \"contracts/Mycontract.sol\":146:167  state = State.Waiting */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Mycontract.sol\":26:474  contract MyContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"contracts/Mycontract.sol\":26:474  contract MyContract {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mycontract.sol\":26:474  contract MyContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d8557d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa094a031\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc0fa2eee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Mycontract.sol\":180:251  function updateState() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Mycontract.sol\":326:471  function isReady() public view returns(bool) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mycontract.sol\":257:320  function setReady() public {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Mycontract.sol\":97:115  State public state */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mycontract.sol\":180:251  function updateState() public {... */\n    tag_8:\n        /* \"contracts/Mycontract.sol\":228:244  State.InProgress */\n      0x01\n        /* \"contracts/Mycontract.sol\":220:225  state */\n      0x00\n      dup1\n        /* \"contracts/Mycontract.sol\":220:244  state = State.InProgress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n    tag_20:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Mycontract.sol\":180:251  function updateState() public {... */\n      jump\t// out\n        /* \"contracts/Mycontract.sol\":326:471  function isReady() public view returns(bool) {... */\n    tag_10:\n        /* \"contracts/Mycontract.sol\":365:369  bool */\n      0x00\n        /* \"contracts/Mycontract.sol\":394:405  State.Ready */\n      0x02\n        /* \"contracts/Mycontract.sol\":385:405  state == State.Ready */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      tag_25\n      tag_22\n      jump\t// in\n    tag_25:\n    tag_24:\n        /* \"contracts/Mycontract.sol\":385:390  state */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Mycontract.sol\":385:405  state == State.Ready */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      tag_27\n      tag_22\n      jump\t// in\n    tag_27:\n    tag_26:\n      sub\n        /* \"contracts/Mycontract.sol\":381:443  if (state == State.Ready) {... */\n      tag_28\n      jumpi\n        /* \"contracts/Mycontract.sol\":428:432  true */\n      0x01\n        /* \"contracts/Mycontract.sol\":421:432  return true */\n      swap1\n      pop\n      jump(tag_23)\n        /* \"contracts/Mycontract.sol\":381:443  if (state == State.Ready) {... */\n    tag_28:\n        /* \"contracts/Mycontract.sol\":459:464  false */\n      0x00\n        /* \"contracts/Mycontract.sol\":452:464  return false */\n      swap1\n      pop\n        /* \"contracts/Mycontract.sol\":326:471  function isReady() public view returns(bool) {... */\n    tag_23:\n      swap1\n      jump\t// out\n        /* \"contracts/Mycontract.sol\":257:320  function setReady() public {... */\n    tag_14:\n        /* \"contracts/Mycontract.sol\":302:313  State.Ready */\n      0x02\n        /* \"contracts/Mycontract.sol\":294:299  state */\n      0x00\n      dup1\n        /* \"contracts/Mycontract.sol\":294:313  state = State.Ready */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_22\n      jump\t// in\n    tag_31:\n    tag_30:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Mycontract.sol\":257:320  function setReady() public {... */\n      jump\t// out\n        /* \"contracts/Mycontract.sol\":97:115  State public state */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_32:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_33:\n        /* \"#utility.yul\":184:205   */\n      tag_41\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_12:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_43\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:614   */\n    tag_22:\n        /* \"#utility.yul\":482:559   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":479:480   */\n      0x00\n        /* \"#utility.yul\":472:560   */\n      mstore\n        /* \"#utility.yul\":579:583   */\n      0x21\n        /* \"#utility.yul\":576:577   */\n      0x04\n        /* \"#utility.yul\":569:584   */\n      mstore\n        /* \"#utility.yul\":603:607   */\n      0x24\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":593:608   */\n      revert\n        /* \"#utility.yul\":620:732   */\n    tag_34:\n        /* \"#utility.yul\":700:701   */\n      0x03\n        /* \"#utility.yul\":693:698   */\n      dup2\n        /* \"#utility.yul\":690:702   */\n      lt\n        /* \"#utility.yul\":680:726   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":706:724   */\n      tag_47\n      tag_22\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":680:726   */\n    tag_46:\n        /* \"#utility.yul\":620:732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:863   */\n    tag_35:\n        /* \"#utility.yul\":782:789   */\n      0x00\n        /* \"#utility.yul\":811:816   */\n      dup2\n        /* \"#utility.yul\":800:816   */\n      swap1\n      pop\n        /* \"#utility.yul\":817:857   */\n      tag_49\n        /* \"#utility.yul\":851:856   */\n      dup3\n        /* \"#utility.yul\":817:857   */\n      tag_34\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":738:863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:994   */\n    tag_36:\n        /* \"#utility.yul\":924:933   */\n      0x00\n        /* \"#utility.yul\":957:988   */\n      tag_51\n        /* \"#utility.yul\":982:987   */\n      dup3\n        /* \"#utility.yul\":957:988   */\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":944:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1141   */\n    tag_37:\n        /* \"#utility.yul\":1092:1134   */\n      tag_53\n        /* \"#utility.yul\":1128:1133   */\n      dup2\n        /* \"#utility.yul\":1092:1134   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1087:1090   */\n      dup3\n        /* \"#utility.yul\":1080:1135   */\n      mstore\n        /* \"#utility.yul\":1000:1141   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1147:1379   */\n    tag_18:\n        /* \"#utility.yul\":1245:1249   */\n      0x00\n        /* \"#utility.yul\":1283:1285   */\n      0x20\n        /* \"#utility.yul\":1272:1281   */\n      dup3\n        /* \"#utility.yul\":1268:1286   */\n      add\n        /* \"#utility.yul\":1260:1286   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1372   */\n      tag_55\n        /* \"#utility.yul\":1369:1370   */\n      0x00\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1354:1371   */\n      add\n        /* \"#utility.yul\":1345:1351   */\n      dup5\n        /* \"#utility.yul\":1296:1372   */\n      tag_37\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1147:1379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f00ba36fb9212da337c57b10579a9c822eef8f09a90a79c60bfc4b58cb024b5c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 64,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060008060006101000a81548160ff0219169083600281111561003657610035610040565b5b021790555061006f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6102538061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631d8557d714610051578063a094a0311461005b578063c0fa2eee14610079578063c19d93fb14610083575b600080fd5b6100596100a1565b005b6100636100cd565b6040516100709190610170565b60405180910390f35b610081610118565b005b61008b610144565b6040516100989190610202565b60405180910390f35b60016000806101000a81548160ff021916908360028111156100c6576100c561018b565b5b0217905550565b60006002808111156100e2576100e161018b565b5b60008054906101000a900460ff1660028111156101025761010161018b565b5b036101105760019050610115565b600090505b90565b60026000806101000a81548160ff0219169083600281111561013d5761013c61018b565b5b0217905550565b60008054906101000a900460ff1681565b60008115159050919050565b61016a81610155565b82525050565b60006020820190506101856000830184610161565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106101cb576101ca61018b565b5b50565b60008190506101dc826101ba565b919050565b60006101ec826101ce565b9050919050565b6101fc816101e1565b82525050565b600060208201905061021760008301846101f3565b9291505056fea2646970667358221220f00ba36fb9212da337c57b10579a9c822eef8f09a90a79c60bfc4b58cb024b5c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x36 JUMPI PUSH2 0x35 PUSH2 0x40 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x6F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x253 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D8557D7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA094A031 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xC0FA2EEE EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x83 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC6 JUMPI PUSH2 0xC5 PUSH2 0x18B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH2 0xE1 PUSH2 0x18B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x18B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x110 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D JUMPI PUSH2 0x13C PUSH2 0x18B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x18B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1DC DUP3 PUSH2 0x1BA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH2 0x1E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x217 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LOG3 PUSH16 0xB9212DA337C57B10579A9C822EEF8F09 0xA9 EXP PUSH26 0xC60BFC4B58CB024B5C64736F6C634300080D0033000000000000 ",
							"sourceMap": "26:448:0:-:0;;;122:52;;;;;;;;;;154:13;146:5;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;26:448;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;26:448:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isReady_51": {
									"entryPoint": 205,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setReady_35": {
									"entryPoint": 280,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@state_8": {
									"entryPoint": 324,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateState_26": {
									"entryPoint": 161,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_State_$5_to_t_uint8_fromStack": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_State_$5__to_t_uint8__fromStack_reversed": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_State_$5": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_State_$5_to_t_uint8": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_State_$5": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1382:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "593:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "434:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "704:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "706:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "706:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "706:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "693:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "700:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "690:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "690:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:20:1"
															},
															"nodeType": "YulIf",
															"src": "680:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_State_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "663:5:1",
														"type": ""
													}
												],
												"src": "620:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "790:73:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "800:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "811:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "800:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "851:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_State_$5",
																	"nodeType": "YulIdentifier",
																	"src": "817:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "817:40:1"
														}
													]
												},
												"name": "cleanup_t_enum$_State_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "772:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "782:7:1",
														"type": ""
													}
												],
												"src": "738:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "944:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "982:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_State_$5",
																	"nodeType": "YulIdentifier",
																	"src": "957:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:31:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "944:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_State_$5_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "914:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "924:9:1",
														"type": ""
													}
												],
												"src": "869:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1128:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_State_$5_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1092:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:42:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:55:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_State_$5_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1058:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1065:3:1",
														"type": ""
													}
												],
												"src": "1000:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1250:129:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1260:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1260:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1345:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_State_$5_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1296:48:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:76:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_State_$5__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1222:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1234:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1245:4:1",
														"type": ""
													}
												],
												"src": "1147:232:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$5(value)\n    }\n\n    function convert_t_enum$_State_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$5(value)\n    }\n\n    function abi_encode_t_enum$_State_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$5_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$5__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631d8557d714610051578063a094a0311461005b578063c0fa2eee14610079578063c19d93fb14610083575b600080fd5b6100596100a1565b005b6100636100cd565b6040516100709190610170565b60405180910390f35b610081610118565b005b61008b610144565b6040516100989190610202565b60405180910390f35b60016000806101000a81548160ff021916908360028111156100c6576100c561018b565b5b0217905550565b60006002808111156100e2576100e161018b565b5b60008054906101000a900460ff1660028111156101025761010161018b565b5b036101105760019050610115565b600090505b90565b60026000806101000a81548160ff0219169083600281111561013d5761013c61018b565b5b0217905550565b60008054906101000a900460ff1681565b60008115159050919050565b61016a81610155565b82525050565b60006020820190506101856000830184610161565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106101cb576101ca61018b565b5b50565b60008190506101dc826101ba565b919050565b60006101ec826101ce565b9050919050565b6101fc816101e1565b82525050565b600060208201905061021760008301846101f3565b9291505056fea2646970667358221220f00ba36fb9212da337c57b10579a9c822eef8f09a90a79c60bfc4b58cb024b5c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D8557D7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA094A031 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xC0FA2EEE EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x83 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC6 JUMPI PUSH2 0xC5 PUSH2 0x18B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH2 0xE1 PUSH2 0x18B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x18B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x110 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D JUMPI PUSH2 0x13C PUSH2 0x18B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x18B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1DC DUP3 PUSH2 0x1BA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC DUP2 PUSH2 0x1E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x217 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SIGNEXTEND LOG3 PUSH16 0xB9212DA337C57B10579A9C822EEF8F09 0xA9 EXP PUSH26 0xC60BFC4B58CB024B5C64736F6C634300080D0033000000000000 ",
							"sourceMap": "26:448:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;180:71;;;:::i;:::-;;326:145;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:63;;;:::i;:::-;;97:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;180:71;228:16;220:5;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;180:71::o;326:145::-;365:4;394:11;385:20;;;;;;;;:::i;:::-;;:5;;;;;;;;;;:20;;;;;;;;:::i;:::-;;;381:62;;428:4;421:11;;;;381:62;459:5;452:12;;326:145;;:::o;257:63::-;302:11;294:5;;:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;257:63::o;97:18::-;;;;;;;;;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:180::-;482:77;479:1;472:88;579:4;576:1;569:15;603:4;600:1;593:15;620:112;700:1;693:5;690:12;680:46;;706:18;;:::i;:::-;680:46;620:112;:::o;738:125::-;782:7;811:5;800:16;;817:40;851:5;817:40;:::i;:::-;738:125;;;:::o;869:::-;924:9;957:31;982:5;957:31;:::i;:::-;944:44;;869:125;;;:::o;1000:141::-;1092:42;1128:5;1092:42;:::i;:::-;1087:3;1080:55;1000:141;;:::o;1147:232::-;1245:4;1283:2;1272:9;1268:18;1260:26;;1296:76;1369:1;1358:9;1354:17;1345:6;1296:76;:::i;:::-;1147:232;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "119000",
								"executionCost": "24464",
								"totalCost": "143464"
							},
							"external": {
								"isReady()": "2562",
								"setReady()": "24453",
								"state()": "2601",
								"updateState()": "24409"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 122,
									"end": 174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 154,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 26,
									"end": 474,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 474,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f00ba36fb9212da337c57b10579a9c822eef8f09a90a79c60bfc4b58cb024b5c64736f6c634300080d0033",
									".code": [
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "1D8557D7"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "A094A031"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "C0FA2EEE"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "C19D93FB"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 251,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 257,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 320,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 180,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 385,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 381,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 381,
											"end": 443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 432,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 381,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 257,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 294,
											"end": 313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 97,
											"end": 115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 434,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 479,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 603,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 620,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 693,
											"end": 698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 702,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 680,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 680,
											"end": 726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 680,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 680,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 620,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 620,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 738,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 817,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 817,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 817,
											"end": 857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 817,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 738,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 738,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 869,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 869,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 957,
											"end": 988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 957,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 944,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1141,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1000,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1092,
											"end": 1134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1134,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1092,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1296,
											"end": 1372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1296,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1379,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isReady()": "a094a031",
							"setReady()": "c0fa2eee",
							"state()": "c19d93fb",
							"updateState()": "1d8557d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"isReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setReady\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum MyContract.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mycontract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mycontract.sol\":{\"keccak256\":\"0x62730914957debdb8bf048d112b01d8481933af84ff98bd5a3bf67dbd8c9589c\",\"urls\":[\"bzz-raw://2552c3626161c386f5992d1e7232c67a587022b70244454d37301c0275ea6c88\",\"dweb:/ipfs/QmV2AKHekgYfdh9cbJt7E4bQP9B3ZNpxiuhCkviCZ6QU39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Mycontract.sol:MyContract",
								"label": "state",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(State)5"
							}
						],
						"types": {
							"t_enum(State)5": {
								"encoding": "inplace",
								"label": "enum MyContract.State",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mycontract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mycontract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mycontract.sol": {
				"ast": {
					"absolutePath": "contracts/Mycontract.sol",
					"exportedSymbols": {
						"MyContract": [
							52
						]
					},
					"id": 53,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "MyContract",
							"nameLocation": "35:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyContract.State",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "Waiting",
											"nameLocation": "64:7:0",
											"nodeType": "EnumValue",
											"src": "64:7:0"
										},
										{
											"id": 3,
											"name": "InProgress",
											"nameLocation": "74:10:0",
											"nodeType": "EnumValue",
											"src": "74:10:0"
										},
										{
											"id": 4,
											"name": "Ready",
											"nameLocation": "86:5:0",
											"nodeType": "EnumValue",
											"src": "86:5:0"
										}
									],
									"name": "State",
									"nameLocation": "57:5:0",
									"nodeType": "EnumDefinition",
									"src": "52:40:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 8,
									"mutability": "mutable",
									"name": "state",
									"nameLocation": "110:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "97:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$5",
										"typeString": "enum MyContract.State"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "State",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "97:5:0"
										},
										"referencedDeclaration": 5,
										"src": "97:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$5",
											"typeString": "enum MyContract.State"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "136:38:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 12,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																"typeString": "type(enum MyContract.State)"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Waiting",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "154:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"src": "146:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum MyContract.State"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "146:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:0:0"
									},
									"scope": 52,
									"src": "122:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "210:41:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "220:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "228:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																"typeString": "type(enum MyContract.State)"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "InProgress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "228:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"src": "220:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum MyContract.State"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "220:24:0"
											}
										]
									},
									"functionSelector": "1d8557d7",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateState",
									"nameLocation": "189:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:0:0"
									},
									"scope": 52,
									"src": "180:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "284:36:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "294:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 30,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																"typeString": "type(enum MyContract.State)"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Ready",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "302:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"src": "294:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum MyContract.State"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "294:19:0"
											}
										]
									},
									"functionSelector": "c0fa2eee",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setReady",
									"nameLocation": "266:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:0:0"
									},
									"scope": 52,
									"src": "257:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "371:100:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum MyContract.State"
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "385:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 41,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																"typeString": "type(enum MyContract.State)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Ready",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "394:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum MyContract.State"
														}
													},
													"src": "385:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "381:62:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "407:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "428:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 39,
															"id": 45,
															"nodeType": "Return",
															"src": "421:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "459:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 39,
												"id": 49,
												"nodeType": "Return",
												"src": "452:12:0"
											}
										]
									},
									"functionSelector": "a094a031",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isReady",
									"nameLocation": "335:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "365:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:6:0"
									},
									"scope": 52,
									"src": "326:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "26:448:0",
							"usedErrors": []
						}
					],
					"src": "0:474:0"
				},
				"id": 0
			}
		}
	}
}