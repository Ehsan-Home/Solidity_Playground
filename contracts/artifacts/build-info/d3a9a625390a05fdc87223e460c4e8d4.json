{
	"id": "d3a9a625390a05fdc87223e460c4e8d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mycontract.sol": {
				"content": "pragma solidity ^0.8.13;\n\ncontract MyContract {\n    mapping (address => uint) balances;\n    address payable public wallet;\n\n    constructor(address payable _wallet) {\n        wallet = _wallet;\n    }\n\n    // external : unlike public, external only can be used outside of the contract,  \n    fallback() external payable {\n        buyToken();\n    }\n\n    function saySomething() public returns(string memory) {\n        return \"I said STH!\";\n    }\n\n    function buyToken() public payable {\n        // balances[msg.sender] += 1;\n        // msg.sender => wallet (msg.value amount)\n        // wallet.transfer = wallet.deposit\n        wallet.transfer(msg.value);\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mycontract.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_wallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saySomething",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mycontract.sol\":26:662  contract MyContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Mycontract.sol\":128:198  constructor(address payable _wallet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Mycontract.sol\":184:191  _wallet */\n  dup1\n    /* \"contracts/Mycontract.sol\":175:181  wallet */\n  0x01\n  0x00\n    /* \"contracts/Mycontract.sol\":175:191  wallet = _wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Mycontract.sol\":128:198  constructor(address payable _wallet) {... */\n  pop\n    /* \"contracts/Mycontract.sol\":26:662  contract MyContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_11:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_20\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_12:\n    /* \"#utility.yul\":657:689   */\n  tag_22\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  dup1\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_23:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_13:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_25\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:1252   */\ntag_3:\n    /* \"#utility.yul\":963:969   */\n  0x00\n    /* \"#utility.yul\":1012:1014   */\n  0x20\n    /* \"#utility.yul\":1000:1009   */\n  dup3\n    /* \"#utility.yul\":991:998   */\n  dup5\n    /* \"#utility.yul\":987:1010   */\n  sub\n    /* \"#utility.yul\":983:1015   */\n  slt\n    /* \"#utility.yul\":980:1099   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1018:1097   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":980:1099   */\ntag_27:\n    /* \"#utility.yul\":1138:1139   */\n  0x00\n    /* \"#utility.yul\":1163:1235   */\n  tag_29\n    /* \"#utility.yul\":1227:1234   */\n  dup5\n    /* \"#utility.yul\":1218:1224   */\n  dup3\n    /* \"#utility.yul\":1207:1216   */\n  dup6\n    /* \"#utility.yul\":1203:1225   */\n  add\n    /* \"#utility.yul\":1163:1235   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1153:1235   */\n  swap2\n  pop\n    /* \"#utility.yul\":1109:1245   */\n  pop\n    /* \"#utility.yul\":885:1252   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Mycontract.sol\":26:662  contract MyContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mycontract.sol\":26:662  contract MyContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x521eb273\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfbd61553\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"contracts/Mycontract.sol\":328:338  buyToken() */\n      tag_8\n        /* \"contracts/Mycontract.sol\":328:336  buyToken */\n      tag_9\n        /* \"contracts/Mycontract.sol\":328:338  buyToken() */\n      jump\t// in\n    tag_8:\n        /* \"contracts/Mycontract.sol\":26:662  contract MyContract {... */\n      stop\n        /* \"contracts/Mycontract.sol\":92:121  address payable public wallet */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mycontract.sol\":448:659  function buyToken() public payable {... */\n    tag_4:\n      tag_15\n      tag_9\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Mycontract.sol\":351:442  function saySomething() public returns(string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Mycontract.sol\":448:659  function buyToken() public payable {... */\n    tag_9:\n        /* \"contracts/Mycontract.sol\":626:632  wallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Mycontract.sol\":626:641  wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Mycontract.sol\":626:652  wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/Mycontract.sol\":642:651  msg.value */\n      callvalue\n        /* \"contracts/Mycontract.sol\":626:652  wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"contracts/Mycontract.sol\":448:659  function buyToken() public payable {... */\n      jump\t// out\n        /* \"contracts/Mycontract.sol\":92:121  address payable public wallet */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Mycontract.sol\":351:442  function saySomething() public returns(string memory) {... */\n    tag_18:\n        /* \"contracts/Mycontract.sol\":390:403  string memory */\n      0x60\n        /* \"contracts/Mycontract.sol\":415:435  return \"I said STH!\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x4920736169642053544821000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/Mycontract.sol\":351:442  function saySomething() public returns(string memory) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_25:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_26:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_36\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_25\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:391   */\n    tag_27:\n        /* \"#utility.yul\":352:384   */\n      tag_38\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":352:384   */\n      tag_26\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":340:385   */\n      mstore\n        /* \"#utility.yul\":249:391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:651   */\n    tag_14:\n        /* \"#utility.yul\":506:510   */\n      0x00\n        /* \"#utility.yul\":544:546   */\n      0x20\n        /* \"#utility.yul\":533:542   */\n      dup3\n        /* \"#utility.yul\":529:547   */\n      add\n        /* \"#utility.yul\":521:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:644   */\n      tag_40\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":630:639   */\n      dup4\n        /* \"#utility.yul\":626:643   */\n      add\n        /* \"#utility.yul\":617:623   */\n      dup5\n        /* \"#utility.yul\":557:644   */\n      tag_27\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":397:651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":657:756   */\n    tag_28:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":743:748   */\n      dup2\n        /* \"#utility.yul\":737:749   */\n      mload\n        /* \"#utility.yul\":727:749   */\n      swap1\n      pop\n        /* \"#utility.yul\":657:756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":762:931   */\n    tag_29:\n        /* \"#utility.yul\":846:857   */\n      0x00\n        /* \"#utility.yul\":880:886   */\n      dup3\n        /* \"#utility.yul\":875:878   */\n      dup3\n        /* \"#utility.yul\":868:887   */\n      mstore\n        /* \"#utility.yul\":920:924   */\n      0x20\n        /* \"#utility.yul\":915:918   */\n      dup3\n        /* \"#utility.yul\":911:925   */\n      add\n        /* \"#utility.yul\":896:925   */\n      swap1\n      pop\n        /* \"#utility.yul\":762:931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":937:1244   */\n    tag_30:\n        /* \"#utility.yul\":1005:1006   */\n      0x00\n        /* \"#utility.yul\":1015:1128   */\n    tag_44:\n        /* \"#utility.yul\":1029:1035   */\n      dup4\n        /* \"#utility.yul\":1026:1027   */\n      dup2\n        /* \"#utility.yul\":1023:1036   */\n      lt\n        /* \"#utility.yul\":1015:1128   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1114:1115   */\n      dup1\n        /* \"#utility.yul\":1109:1112   */\n      dup3\n        /* \"#utility.yul\":1105:1116   */\n      add\n        /* \"#utility.yul\":1099:1117   */\n      mload\n        /* \"#utility.yul\":1095:1096   */\n      dup2\n        /* \"#utility.yul\":1090:1093   */\n      dup5\n        /* \"#utility.yul\":1086:1097   */\n      add\n        /* \"#utility.yul\":1079:1118   */\n      mstore\n        /* \"#utility.yul\":1051:1053   */\n      0x20\n        /* \"#utility.yul\":1048:1049   */\n      dup2\n        /* \"#utility.yul\":1044:1054   */\n      add\n        /* \"#utility.yul\":1039:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":1015:1128   */\n      jump(tag_44)\n    tag_46:\n        /* \"#utility.yul\":1146:1152   */\n      dup4\n        /* \"#utility.yul\":1143:1144   */\n      dup2\n        /* \"#utility.yul\":1140:1153   */\n      gt\n        /* \"#utility.yul\":1137:1238   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1226:1227   */\n      0x00\n        /* \"#utility.yul\":1217:1223   */\n      dup5\n        /* \"#utility.yul\":1212:1215   */\n      dup5\n        /* \"#utility.yul\":1208:1224   */\n      add\n        /* \"#utility.yul\":1201:1228   */\n      mstore\n        /* \"#utility.yul\":1137:1238   */\n    tag_47:\n        /* \"#utility.yul\":986:1244   */\n      pop\n        /* \"#utility.yul\":937:1244   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1250:1352   */\n    tag_31:\n        /* \"#utility.yul\":1291:1297   */\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x1f\n        /* \"#utility.yul\":1338:1345   */\n      not\n        /* \"#utility.yul\":1333:1335   */\n      0x1f\n        /* \"#utility.yul\":1326:1331   */\n      dup4\n        /* \"#utility.yul\":1322:1336   */\n      add\n        /* \"#utility.yul\":1318:1346   */\n      and\n        /* \"#utility.yul\":1308:1346   */\n      swap1\n      pop\n        /* \"#utility.yul\":1250:1352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1722   */\n    tag_32:\n        /* \"#utility.yul\":1446:1449   */\n      0x00\n        /* \"#utility.yul\":1474:1513   */\n      tag_50\n        /* \"#utility.yul\":1507:1512   */\n      dup3\n        /* \"#utility.yul\":1474:1513   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1529:1600   */\n      tag_51\n        /* \"#utility.yul\":1593:1599   */\n      dup2\n        /* \"#utility.yul\":1588:1591   */\n      dup6\n        /* \"#utility.yul\":1529:1600   */\n      tag_29\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1522:1600   */\n      swap4\n      pop\n        /* \"#utility.yul\":1609:1661   */\n      tag_52\n        /* \"#utility.yul\":1654:1660   */\n      dup2\n        /* \"#utility.yul\":1649:1652   */\n      dup6\n        /* \"#utility.yul\":1642:1646   */\n      0x20\n        /* \"#utility.yul\":1635:1640   */\n      dup7\n        /* \"#utility.yul\":1631:1647   */\n      add\n        /* \"#utility.yul\":1609:1661   */\n      tag_30\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1686:1715   */\n      tag_53\n        /* \"#utility.yul\":1708:1714   */\n      dup2\n        /* \"#utility.yul\":1686:1715   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1681:1684   */\n      dup5\n        /* \"#utility.yul\":1677:1716   */\n      add\n        /* \"#utility.yul\":1670:1716   */\n      swap2\n      pop\n        /* \"#utility.yul\":1450:1722   */\n      pop\n        /* \"#utility.yul\":1358:1722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1728:2041   */\n    tag_20:\n        /* \"#utility.yul\":1841:1845   */\n      0x00\n        /* \"#utility.yul\":1879:1881   */\n      0x20\n        /* \"#utility.yul\":1868:1877   */\n      dup3\n        /* \"#utility.yul\":1864:1882   */\n      add\n        /* \"#utility.yul\":1856:1882   */\n      swap1\n      pop\n        /* \"#utility.yul\":1928:1937   */\n      dup2\n        /* \"#utility.yul\":1922:1926   */\n      dup2\n        /* \"#utility.yul\":1918:1938   */\n      sub\n        /* \"#utility.yul\":1914:1915   */\n      0x00\n        /* \"#utility.yul\":1903:1912   */\n      dup4\n        /* \"#utility.yul\":1899:1916   */\n      add\n        /* \"#utility.yul\":1892:1939   */\n      mstore\n        /* \"#utility.yul\":1956:2034   */\n      tag_55\n        /* \"#utility.yul\":2029:2033   */\n      dup2\n        /* \"#utility.yul\":2020:2026   */\n      dup5\n        /* \"#utility.yul\":1956:2034   */\n      tag_32\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1948:2034   */\n      swap1\n      pop\n        /* \"#utility.yul\":1728:2041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c241687b8f71423c5dccc363c08e94662723d9344b80ebba43370a48cf961e164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1255:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "511:7:1",
														"type": ""
													}
												],
												"src": "466:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:1"
															},
															"nodeType": "YulIf",
															"src": "637:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"src": "576:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "791:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "785:5:1",
														"type": ""
													}
												],
												"src": "720:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "970:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1016:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1018:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1018:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1018:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:32:1"
															},
															"nodeType": "YulIf",
															"src": "980:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1109:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1153:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1207:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1218:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1203:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1227:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1163:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1153:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "940:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "951:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "963:6:1",
														"type": ""
													}
												],
												"src": "885:367:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103d63803806103d6833981810160405281019061003291906100dc565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b6102be806101186000396000f3fe6080604052600436106100385760003560e01c8063521eb27314610043578063a48217191461006e578063fbd615531461007857610039565b5b6100416100a3565b005b34801561004f57600080fd5b5061005861010e565b60405161006591906101b2565b60405180910390f35b6100766100a3565b005b34801561008457600080fd5b5061008d610134565b60405161009a9190610266565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010b573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606040518060400160405280600b81526020017f4920736169642053544821000000000000000000000000000000000000000000815250905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019c82610171565b9050919050565b6101ac81610191565b82525050565b60006020820190506101c760008301846101a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102075780820151818401526020810190506101ec565b83811115610216576000848401525b50505050565b6000601f19601f8301169050919050565b6000610238826101cd565b61024281856101d8565b93506102528185602086016101e9565b61025b8161021c565b840191505092915050565b60006020820190508181036000830152610280818461022d565b90509291505056fea26469706673582212209c241687b8f71423c5dccc363c08e94662723d9344b80ebba43370a48cf961e164736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3D6 CODESIZE SUB DUP1 PUSH2 0x3D6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9 DUP3 PUSH2 0x7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9E JUMP JUMPDEST DUP2 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP5 DUP3 DUP6 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BE DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xFBD61553 EQ PUSH2 0x78 JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH2 0x41 PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58 PUSH2 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4920736169642053544821000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC DUP2 PUSH2 0x191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x207 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238 DUP3 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x242 DUP2 DUP6 PUSH2 0x1D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x252 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x21C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280 DUP2 DUP5 PUSH2 0x22D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0x24 AND DUP8 0xB8 0xF7 EQ 0x23 0xC5 0xDC 0xCC CALLDATASIZE EXTCODECOPY ADDMOD 0xE9 CHAINID PUSH3 0x723D93 DIFFICULTY 0xB8 0xE 0xBB LOG4 CALLER PUSH17 0xA48CF961E164736F6C634300080D003300 ",
							"sourceMap": "26:636:0:-:0;;;128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;184:7;175:6;;:16;;;;;;;;;;;;;;;;;;128:70;26:636;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;26:636:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyToken_43": {
									"entryPoint": 163,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saySomething_32": {
									"entryPoint": 308,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@wallet_7": {
									"entryPoint": 270,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2044:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "174:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "184:7:1",
														"type": ""
													}
												],
												"src": "139:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "378:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "352:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "318:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "325:3:1",
														"type": ""
													}
												],
												"src": "249:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "641:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "557:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "557:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "483:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "495:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "506:4:1",
														"type": ""
													}
												],
												"src": "397:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "727:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "743:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "699:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "709:6:1",
														"type": ""
													}
												],
												"src": "657:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "875:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "880:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "868:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "868:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "896:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "915:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "920:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "896:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "830:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "835:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "846:11:1",
														"type": ""
													}
												],
												"src": "762:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "986:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "996:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1005:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1000:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1065:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1090:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1095:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1086:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1086:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1109:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1114:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1105:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1105:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1099:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1099:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1079:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1079:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1079:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1026:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1023:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1037:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1039:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1048:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1051:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1044:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1039:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1019:3:1",
																"statements": []
															},
															"src": "1015:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1162:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1212:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1217:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1208:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1208:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1201:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1201:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1201:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1143:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1146:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1140:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:13:1"
															},
															"nodeType": "YulIf",
															"src": "1137:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "968:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "973:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "978:6:1",
														"type": ""
													}
												],
												"src": "937:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1308:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1326:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1342:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1281:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1291:6:1",
														"type": ""
													}
												],
												"src": "1250:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1460:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1507:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1474:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1464:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1522:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1588:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1529:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1635:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1642:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1654:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1609:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1609:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1670:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1708:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1686:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1686:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1670:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1431:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1446:3:1",
														"type": ""
													}
												],
												"src": "1358:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1846:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1856:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1868:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1856:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1922:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1948:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2020:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2029:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1956:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1818:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1830:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1841:4:1",
														"type": ""
													}
												],
												"src": "1728:313:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c8063521eb27314610043578063a48217191461006e578063fbd615531461007857610039565b5b6100416100a3565b005b34801561004f57600080fd5b5061005861010e565b60405161006591906101b2565b60405180910390f35b6100766100a3565b005b34801561008457600080fd5b5061008d610134565b60405161009a9190610266565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010b573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606040518060400160405280600b81526020017f4920736169642053544821000000000000000000000000000000000000000000815250905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019c82610171565b9050919050565b6101ac81610191565b82525050565b60006020820190506101c760008301846101a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102075780820151818401526020810190506101ec565b83811115610216576000848401525b50505050565b6000601f19601f8301169050919050565b6000610238826101cd565b61024281856101d8565b93506102528185602086016101e9565b61025b8161021c565b840191505092915050565b60006020820190508181036000830152610280818461022d565b90509291505056fea26469706673582212209c241687b8f71423c5dccc363c08e94662723d9344b80ebba43370a48cf961e164736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xFBD61553 EQ PUSH2 0x78 JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH2 0x41 PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58 PUSH2 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4920736169642053544821000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C DUP3 PUSH2 0x171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AC DUP2 PUSH2 0x191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x207 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238 DUP3 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x242 DUP2 DUP6 PUSH2 0x1D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x252 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x21C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x280 DUP2 DUP5 PUSH2 0x22D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0x24 AND DUP8 0xB8 0xF7 EQ 0x23 0xC5 0xDC 0xCC CALLDATASIZE EXTCODECOPY ADDMOD 0xE9 CHAINID PUSH3 0x723D93 DIFFICULTY 0xB8 0xE 0xBB LOG4 CALLER PUSH17 0xA48CF961E164736F6C634300080D003300 ",
							"sourceMap": "26:636:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;328:10;:8;:10::i;:::-;26:636;92:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:211;;;:::i;:::-;;351:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:211;626:6;;;;;;;;;;;:15;;:26;642:9;626:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:211::o;92:29::-;;;;;;;;;;;;;:::o;351:91::-;390:13;415:20;;;;;;;;;;;;;;;;;;;351:91;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:99::-;709:6;743:5;737:12;727:22;;657:99;;;:::o;762:169::-;846:11;880:6;875:3;868:19;920:4;915:3;911:14;896:29;;762:169;;;;:::o;937:307::-;1005:1;1015:113;1029:6;1026:1;1023:13;1015:113;;;1114:1;1109:3;1105:11;1099:18;1095:1;1090:3;1086:11;1079:39;1051:2;1048:1;1044:10;1039:15;;1015:113;;;1146:6;1143:1;1140:13;1137:101;;;1226:1;1217:6;1212:3;1208:16;1201:27;1137:101;986:258;937:307;;;:::o;1250:102::-;1291:6;1342:2;1338:7;1333:2;1326:5;1322:14;1318:28;1308:38;;1250:102;;;:::o;1358:364::-;1446:3;1474:39;1507:5;1474:39;:::i;:::-;1529:71;1593:6;1588:3;1529:71;:::i;:::-;1522:78;;1609:52;1654:6;1649:3;1642:4;1635:5;1631:16;1609:52;:::i;:::-;1686:29;1708:6;1686:29;:::i;:::-;1681:3;1677:39;1670:46;;1450:272;1358:364;;;;:::o;1728:313::-;1841:4;1879:2;1868:9;1864:18;1856:26;;1928:9;1922:4;1918:20;1914:1;1903:9;1899:17;1892:47;1956:78;2029:4;2020:6;1956:78;:::i;:::-;1948:86;;1728:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"buyToken()": "infinite",
								"saySomething()": "infinite",
								"wallet()": "2492"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 181,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 175,
									"end": 191,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 175,
									"end": 191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 175,
									"end": 191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 963,
									"end": 969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 998,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1010,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1139,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1227,
									"end": 1234,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 1216,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1225,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 662,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c241687b8f71423c5dccc363c08e94662723d9344b80ebba43370a48cf961e164736f6c634300080d0033",
									".code": [
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "521EB273"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "A4821719"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "FBD61553"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 662,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 448,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 659,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 448,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 626,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 659,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 92,
											"end": 121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "4920736169642053544821000000000000000000000000000000000000000000"
										},
										{
											"begin": 415,
											"end": 435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 626,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 657,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 749,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 657,
											"end": 756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 657,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 657,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 657,
											"end": 756,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 762,
											"end": 931,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 762,
											"end": 931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 875,
											"end": 878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 868,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 920,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 911,
											"end": 925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 896,
											"end": 925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 762,
											"end": 931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 931,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1036,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1015,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1153,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1238,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1137,
											"end": 1238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1215,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1137,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1474,
											"end": 1513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1474,
											"end": 1513,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1474,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1529,
											"end": 1600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1600,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1529,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1600,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1640,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1686,
											"end": 1715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1686,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1956,
											"end": 2034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 2034,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1956,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 2041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken()": "a4821719",
							"saySomething()": "fbd61553",
							"wallet()": "521eb273"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saySomething\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mycontract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mycontract.sol\":{\"keccak256\":\"0x774ac02074ac8ec93df969d3fdbdf794c484520b9b71b4520d758996baf5dbe0\",\"urls\":[\"bzz-raw://9033b52a49bdcc31fab084941fd7ebe9792b49f28b07a43b8230074563d126db\",\"dweb:/ipfs/QmUmDvdc7CUVUboaRDewtomUYng23gwGhmjXjJCfdMF4uZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Mycontract.sol:MyContract",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "contracts/Mycontract.sol:MyContract",
								"label": "wallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Mycontract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Mycontract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/Mycontract.sol:3:1:\n  |\n3 | contract MyContract {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/Mycontract.sol:12:5:\n   |\n12 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 345,
						"file": "contracts/Mycontract.sol",
						"message": "The payable fallback function is defined here.",
						"start": 290
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 662,
					"file": "contracts/Mycontract.sol",
					"start": 26
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/Mycontract.sol:16:5:\n   |\n16 |     function saySomething() public returns(string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 442,
					"file": "contracts/Mycontract.sol",
					"start": 351
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Mycontract.sol": {
				"ast": {
					"absolutePath": "contracts/Mycontract.sol",
					"exportedSymbols": {
						"MyContract": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "MyContract",
							"nameLocation": "35:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "78:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "52:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "61:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "52:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "72:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "521eb273",
									"id": 7,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "115:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "92:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "92:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "165:33:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "175:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 13,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "175:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "175:16:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "140:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:25:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:0:0"
									},
									"scope": 44,
									"src": "128:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "318:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 20,
														"name": "buyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "328:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "328:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "328:10:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:0:0"
									},
									"scope": 44,
									"src": "290:55:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "405:37:0",
										"statements": [
											{
												"expression": {
													"hexValue": "4920736169642053544821",
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "422:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4fd8bba6a15a2a11663064643ce0897999303e364dc029ea82c0dee48155911b",
														"typeString": "literal_string \"I said STH!\""
													},
													"value": "I said STH!"
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "415:20:0"
											}
										]
									},
									"functionSelector": "fbd61553",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saySomething",
									"nameLocation": "360:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "390:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 26,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:15:0"
									},
									"scope": 44,
									"src": "351:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "483:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 38,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "642:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "642:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 35,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "626:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "626:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "626:26:0"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "457:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:0"
									},
									"scope": 44,
									"src": "448:211:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 45,
							"src": "26:636:0",
							"usedErrors": []
						}
					],
					"src": "0:662:0"
				},
				"id": 0
			}
		}
	}
}